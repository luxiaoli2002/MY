#pragma checksum "C:\WorkSpace\SOHO\MY\MY.Web\MY.Web\Views\Home\Privacy.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "bd61467460d0b7b61fef606a2d78d241cddff4b5"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Privacy), @"mvc.1.0.view", @"/Views/Home/Privacy.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Privacy.cshtml", typeof(AspNetCore.Views_Home_Privacy))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\WorkSpace\SOHO\MY\MY.Web\MY.Web\Views\_ViewImports.cshtml"
using MY.Web;

#line default
#line hidden
#line 2 "C:\WorkSpace\SOHO\MY\MY.Web\MY.Web\Views\_ViewImports.cshtml"
using MY.Web.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bd61467460d0b7b61fef606a2d78d241cddff4b5", @"/Views/Home/Privacy.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"287f697f5a89cdf7b8d58477de2e2ac73215f420", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Privacy : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\WorkSpace\SOHO\MY\MY.Web\MY.Web\Views\Home\Privacy.cshtml"
  
    ViewData["Title"] = "Privacy Policy";

#line default
#line hidden
            BeginContext(50, 4, true);
            WriteLiteral("<h1>");
            EndContext();
            BeginContext(55, 17, false);
#line 4 "C:\WorkSpace\SOHO\MY\MY.Web\MY.Web\Views\Home\Privacy.cshtml"
Write(ViewData["Title"]);

#line default
#line hidden
            EndContext();
            BeginContext(72, 9, true);
            WriteLiteral("</h1>\r\n\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(98, 614, true);
                WriteLiteral(@"

<script type=""text/javascript"">
    var w = 320, h = 240;                                       //摄像头配置,创建canvas
    var pos = 0, ctx = null, saveCB, image = [];
    var canvas = document.createElement(""canvas"");
    $(""body"").append(canvas);
    canvas.setAttribute('width', w);
    canvas.setAttribute('height', h);
    ctx = canvas.getContext(""2d"");
    image = ctx.getImageData(0, 0, w, h);

    $(""#webcam"").webcam({
        width: w,
        height: h,
        mode: ""callback"",                       //stream,save，回调模式,流模式和保存模式
        swffile: ""jscam_canvas_only.swf"",
        swffile: """);
                EndContext();
                BeginContext(713, 63, false);
#line 23 "C:\WorkSpace\SOHO\MY\MY.Web\MY.Web\Views\Home\Privacy.cshtml"
             Write(Url.Content("~/lib/jQuery-webcam-master/jscam_canvas_only.swf"));

#line default
#line hidden
                EndContext();
                BeginContext(776, 1517, true);
                WriteLiteral(@""",
        onTick: function(remain) { 
            if (0 == remain) {
                $(""#status"").text(""拍照成功!"");
            } else {
                $(""#status"").text(""倒计时""+remain + ""秒钟..."");
            }
        },
        onSave: function(data){              //保存图像
            var col = data.split("";"");
            var img = image;
            for(var i = 0; i < w; i++) {
                var tmp = parseInt(col[i]);
                img.data[pos + 0] = (tmp >> 16) & 0xff;
                img.data[pos + 1] = (tmp >> 8) & 0xff;
                img.data[pos + 2] = tmp & 0xff;
                img.data[pos + 3] = 0xff;
                pos+= 4;
            }
            if (pos >= 4 * w * h) {
                ctx.putImageData(img,0,0);      //转换图像数据，渲染canvas
                pos = 0;
                Imagedata=canvas.toDataURL().substring(22);  //上传给后台的图片数据
            }
        },
        onCapture: function () {               //捕获图像
            webcam.save();      
        },
        ");
                WriteLiteral(@"debug: function (type, string) {       //控制台信息
            console.log(type + "": "" + string);
        },
        onLoad: function() {                   //flash 加载完毕执行
            console.log('加载完毕！')
            var cams = webcam.getCameraList();
            for(var i in cams) {
                $(""body"").append(""<p>"" + cams[i] + ""</p>"");
            }
        }
    });  

    $("".play"").click(function(){
        webcam.capture(5);        //拍照，参数5是倒计时
    });

</script>

");
                EndContext();
            }
            );
            BeginContext(2296, 110, true);
            WriteLiteral("\r\n    <button class=\"play\">拍照</button>\r\n    <div id=\"status\">倒计时</div>\r\n    <div id=\"webcam\"></div>         \r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
