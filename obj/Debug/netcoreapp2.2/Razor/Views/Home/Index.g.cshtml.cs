#pragma checksum "C:\WorkSpace\SOHO\MY\MY.Web\MY.Web\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f5378bfefc4f10c955d2395dbb60f1341b7f298c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\WorkSpace\SOHO\MY\MY.Web\MY.Web\Views\_ViewImports.cshtml"
using MY.Web;

#line default
#line hidden
#line 2 "C:\WorkSpace\SOHO\MY\MY.Web\MY.Web\Views\_ViewImports.cshtml"
using MY.Web.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f5378bfefc4f10c955d2395dbb60f1341b7f298c", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"287f697f5a89cdf7b8d58477de2e2ac73215f420", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\WorkSpace\SOHO\MY\MY.Web\MY.Web\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
            BeginContext(45, 2618, true);
            WriteLiteral(@"

<video id=""video"" autoplay="" ""  style='width:640px;height:480px;border:1px solid #ccc;'></video>

<button id='capture'>PICTURE</button> 

<canvas id=""canvas"" width=""640"" height=""480""></canvas>

 <script type=""text/javascript"">


            // 访问用户媒体设备的兼容方法
            function getUserMedia(constraints, success, error) {
                if (navigator.mediaDevices.getUserMedia) {
                    // 最新的标准API
                    navigator.mediaDevices.getUserMedia(constraints)
                        .then(success).catch(error);
                } else if (navigator.webkitGetUserMedia) {
                    // Webkit核心浏览器
                    navigator.webkitGetUserMedia(constraints, success, error);
                } else
                    if (navigator.mozGetUserMedia) {
                        // Firefox浏览器
                        navigator.mozGetUserMedia(constraints, success, error);
                    } else if (navigator.getUserMedia) {
                        // 旧版API
   ");
            WriteLiteral(@"                     navigator.getUserMedia(constraints, success, error);
                    }
            }
            var video = document.getElementById(""video"");// video元素
            var canvas = document.getElementById(""canvas"");// canvas元素
            var context = canvas.getContext(""2d"");

            // 成功的回调函数
            function success(stream) {
                var CompatibleURL = window.URL || window.webkitURL
                video.src = CompatibleURL.createObjectURL(stream);//将视频流设置为video元素的源
                video.play();// 播放视频
            }

            // 异常的回调函数
            function error(error) {
                console.log('访问用户媒体设备失败：', error.name, error.message);
            }

            if (navigator.mediaDevices.getUserMedia || navigator.getUserMedia ||
                navigator.webkitGetUserMedia || navigator.mozGetUserMedia) {
                // 调用用户媒体设备，访问摄像头
                getUserMedia({ video: { width: 480, height: 320 } }, success, error);
           ");
            WriteLiteral(@" } else {
                alert('您的浏览器不支持访问用户媒体设备！');
            }

            // 绑定拍照按钮的点击事件
            document.getElementById(""capture"").addEventListener(""click"", function () {
                context.drawImage(video, 0, 0, 480, 320);
                // 将video画面在canvas上绘制出来
                var data = canvas.toDataURL('image/png', 1);    
                //将当前显示的图像传到Base64编码的字符串里
                document.getElementById('HiddenField1').value = data;  
                //将上面转换好的Base64编码传到C#的HiddenField里，方便后端取值
            });
            </script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
